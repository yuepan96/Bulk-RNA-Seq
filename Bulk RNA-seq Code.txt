#load packages#

suppressWarnings(
  suppressMessages({
    library(DESeq2)
    library(tidyverse)
    library(zeallot)
    library(ggVolcano)
    library(ggpubr)
    library(ggbeeswarm)
    library(ggsignif)
    library(ggrepel)
    library(pheatmap)
    library(ComplexHeatmap)
    library(clusterProfiler)
    library(org.Mm.eg.db)
    library(decoupleR)
  }))

#load data#

data <- list.files("D:/000PPP/Data/sequencing/vivi1/datasets", ".txt", full.names = TRUE, 
                   recursive = TRUE) %>%
  map(~read.delim(.x) %>% dplyr::select(-c(2:10)) %>%
        filter(gene_name != "-"))
#keep <- intersect(intersect(data[[1]]$gene_id,data[[2]]$gene_id),
#                  data[[3]]$gene_id)
data <- #map(data, \(x) filter(x, gene_id %in% keep)) %>%
  Reduce(function(x,y) left_join(x,y, by="gene_id"), data)
data <- data[!duplicated(data$gene_name.x),]
gene <- data$gene_name.x[!duplicated(data$gene_name.x)]

#colnames(data)
#data[,grepl("length",colnames(data))]
mtx <- data[,c("ED31_KO_1_count.x","ED31_KO_2_count.x",
               "PBS_KO_1_count","PBS_KO_2_count",
               "ED31_WT_1_count.x","ED31_WT_2_count.x",
               "PBS_WT_1_count","PBS_WT_2_count",
               "gene_length")]
colnames(mtx) <- gsub(".x","",colnames(mtx)) %>% gsub("_count","",.)
rownames(mtx) <- gene

pbs <- as.data.frame(mtx[,grepl("PBS|length", colnames(mtx))]) %>%
  mutate(low_count_num = apply(.,1,function(row)sum(row == 0)),
         total_count = rowSums(.), length = .$length) %>%
  filter(low_count_num == 0, total_count >= 50) %>%
  dplyr::select(1:5) %>% as.matrix

ed31 <- as.data.frame(mtx[,grepl("ED31|length", colnames(mtx))]) %>%
  mutate(low_count_num = apply(.,1,function(row)sum(row == 0)),
         total_count = rowSums(.), length = .$length) %>%
  filter(low_count_num == 0, total_count >= 50) %>%
  dplyr::select(1:5) %>% as.matrix

#violin plot#
cols <- c("#F19A97","#A4CFC7","#EDD2E1","#F3C69B")
ggviolin(log1p(pbs[,-5]) %>%
           as.data.frame %>%
           rownames_to_column("gene") %>%
           pivot_longer(cols = -"gene",
                        names_to = "group",
                        values_to = "count"), 
         x = "group", y = "count", fill = "group", palette = cols, 
         ylab = "Individual gene count", xlab = "", legend.title = "",
         title = "Filtered data PBS") + ylim(c(-1,14)) +
  geom_jitter(aes(x = group, y = count, fill = group), 
              alpha = 0.1, size = 0.1) + theme_test() + 
  theme(axis.ticks = element_blank()) + Seurat::NoLegend() |
  ggviolin(log1p(ed31[,-5]) %>%
             as.data.frame %>%
             rownames_to_column("gene") %>%
             pivot_longer(cols = -"gene",
                          names_to = "group",
                          values_to = "count"), 
           x = "group", y = "count", fill = "group", palette = cols, 
           ylab = "Individual gene count", xlab = "", legend.title = "",
           title = "Filtered data ED31") + ylim(c(-1,14)) +
  geom_jitter(aes(x = group, y = count, fill = group), 
              alpha = 0.1, size = 0.1) + theme_test() + 
  theme(axis.ticks = element_blank()) + Seurat::NoLegend()

tpm <- function(counts,length) {
  x <- counts/length
  t(t(x)*1e6/colSums(x)) }

pbs.norm <- tpm(pbs[,1:4], pbs[,5]) %>% log1p
ed31.norm <- tpm(ed31[,1:4], ed31[,5]) %>% log1p

pbs.vars <- apply(pbs.norm,1,var) %>%
  sort(decreasing = TRUE) %>%
  names %>% head(1e3)
ed31.vars <- apply(ed31.norm,1,var) %>%
  sort(decreasing = TRUE) %>%
  names %>% head(1e3)

pbs.pc <- prcomp(t(pbs.norm[pbs.vars,]), center = TRUE)
ed31.pc <- prcomp(t(ed31.norm[ed31.vars,]), center = TRUE)
pbs.id <- colnames(pbs.norm) %>% gsub("_\\d+","",.)
ed31.id <- colnames(ed31.norm) %>% gsub("_\\d+","",.)

#PCA analysis#

pc.cols <- ArchR::paletteDiscrete(colnames(ed31.pc$x),"grove")
(as_tibble(pbs.pc$sdev^2/sum(pbs.pc$sdev^2)) %->% pbs.sdev %>%
    mutate (comp = colnames(pbs.pc$x)) %>% slice(1:5) %>%
    ggbarplot(x = "comp", y = "value", fill = "comp", palette = pc.cols,
              xlab = "Principal Components", ylab = "Variance Explained",
              title = "PC PBS") +
    geom_hline(yintercept = 0.1, linetype = 2) + theme_test() + 
    theme(axis.ticks = element_blank()) + Seurat::NoLegend() |
    ggscatter(data.frame(pbs.pc$x[,1:2], group = as.factor(pbs.id)) %>%
                rownames_to_column("id"), 
              x = "PC1", y = "PC2", color = "group", size = 5, 
              legend = "right", title = "PCA comp_1 vs comp_2 pbs",
              xlab = paste0("PC_1 ", round(pbs.sdev[1,], digit = 2)),
              ylab = paste0("PC_2 ", round(pbs.sdev[2,], digit = 2))) + 
    coord_fixed(xlim = c(-25,25), ylim = c(-20,20)) +
    geom_text_repel(aes(x = PC1, y = PC2, label = id), size = 3, color = "black") +
    theme_test() + theme(panel.grid = element_blank()) + Seurat::NoLegend()) /
  
  (as_tibble(ed31.pc$sdev^2/sum(ed31.pc$sdev^2)) %->% ed31.sdev %>%
     mutate (comp = colnames(ed31.pc$x)) %>% slice(1:7) %>%
     ggbarplot(x = "comp", y = "value", fill = "comp", palette = pc.cols,
               xlab = "Principal Components", ylab = "Variance Explained",
               title = "PC ED31") +
     geom_hline(yintercept = 0.1, linetype = 2) + theme_test() + 
     theme(axis.ticks = element_blank()) + Seurat::NoLegend() |
     ggscatter(data.frame(ed31.pc$x[,1:2], group = as.factor(ed31.id)) %>%
                 rownames_to_column("id"), 
               x = "PC1", y = "PC2", color = "group", size = 5, 
               legend = "right", title = "PCA comp_1 vs comp_2 ed31",
               xlab = paste0("PC_1 ", round(ed31.sdev[1,], digit = 2)),
               ylab = paste0("PC_2 ", round(ed31.sdev[2,], digit = 2))) + 
     coord_fixed(xlim = c(-20,40), ylim = c(-20,20)) +
     geom_text_repel(aes(x = PC1, y = PC2, label = id), size = 3, color = "black") +
     theme_test() + theme(panel.grid = element_blank()) + Seurat::NoLegend())

#volcano plot#

{ pbs.meta <- data.frame(id = colnames(pbs)[1:4],
                         group = c(rep("PBS_KO",2), rep("PBS_WT",2)))
  pbs.meta$group <- factor(pbs.meta$group, c("PBS_KO","PBS_WT"))
  pbs.deseq <- pbs[,1:4] %>%
    DESeqDataSetFromMatrix(pbs.meta, ~group) %>%
    estimateSizeFactors %>% estimateDispersions %>% 
    nbinomWaldTest %>% results(c("group","PBS_KO","PBS_WT")) %>%
    as.data.frame %>% rownames_to_column("gene") #%>% print
  
  pbs.deseq <- add_regulate(pbs.deseq, log2FC_name = "log2FoldChange",
                            fdr_name = "padj",log2FC = 1, fdr = 0.05)
  min.p <- min(pbs.deseq$padj[pbs.deseq$padj!=min(pbs.deseq$padj, 
                                                  na.rm = TRUE)], na.rm = TRUE)
  pbs.deseq$padj <- ifelse(pbs.deseq$padj==0, min.p, pbs.deseq$padj)
  gradual_volcano(pbs.deseq, x = "log2FoldChange", y = "padj",
                  label = "gene", label_number = 30,
                  fills = c("#0571B0","#92C5DE", "#FBFDBF", "#F4A582", "#A42B48"),
                  colors = c("#0571B0","#92C5DE", "#FBFDBF", "#F4A582", "#A42B48"),
                  legend_position = "UL") + 
    labs(title = "KO vs WT in PBS") +
    theme(legend.title = element_blank(), 
          panel.grid = element_blank()) }
{ ed31.meta <- data.frame(id = colnames(ed31)[1:4],
                          group = c(rep("ED31_KO",2), rep("ED31_WT",2)))
  ed31.meta$group <- factor(ed31.meta$group, c("ED31_KO","ED31_WT"))
  ed31.deseq <- ed31[,1:4] %>%
    DESeqDataSetFromMatrix(ed31.meta, ~group) %>%
    estimateSizeFactors %>% estimateDispersions %>% 
    nbinomWaldTest %>% results(c("group","ED31_KO","ED31_WT")) %>%
    as.data.frame %>% rownames_to_column("gene") #%>% print
  
  ed31.deseq <- add_regulate(ed31.deseq, log2FC_name = "log2FoldChange",
                             fdr_name = "padj",log2FC = 1, fdr = 0.05)
  min.p <- min(ed31.deseq$padj[ed31.deseq$padj!=min(ed31.deseq$padj, 
                                                    na.rm = TRUE)], na.rm = TRUE)
  ed31.deseq$padj <- ifelse(ed31.deseq$padj==0, min.p, ed31.deseq$padj)
  gradual_volcano(ed31.deseq, x = "log2FoldChange", y = "padj",
                  label = "gene", label_number = 20,
                  fills = c("#0571B0","#92C5DE", "#FBFDBF", "#F4A582", "#A42B48"),
                  colors = c("#0571B0","#92C5DE", "#FBFDBF", "#F4A582", "#A42B48"),
                  legend_position = "UR") + 
    labs(title = "KO vs WT in ED31") +
    theme(legend.title = element_blank(), 
          panel.grid = element_blank()) }

#heatmap ???#

pbs.scale <- t(apply(pbs.norm, 1, function(x) {
  scale(x, center = TRUE, scale = TRUE) }))
colnames(pbs.scale) <- colnames(pbs.norm)
{ pbs.up <- pbs.deseq %>%
      subset(padj < 0.05 & log2FoldChange > 1) %>% 
      arrange(padj) %>% head(15)
  pbs.down <- pbs.deseq %>%
      subset(padj < 0.05 & log2FoldChange < -1) %>% 
      arrange(padj) %>% head(10)
  gene <- c(pbs.up$gene,pbs.down$gene) %>% rev
  
  Heatmap(as.data.frame(pbs.scale)[gene,],
          rect_gp = grid::gpar(col = "black", lwd = 0.5),
          col = ArchR::paletteContinuous("coolwarm"),
          cluster_rows = FALSE, cluster_columns = TRUE,
          column_names_rot = 45, column_names_centered = FALSE, 
          name = "Z-score") }
ed31.scale <- t(apply(ed31.norm, 1, function(x) {
  scale(x, center = TRUE, scale = TRUE) }))
colnames(ed31.scale) <- colnames(ed31.norm)
{ ed31.up <- ed31.deseq %>%
      subset(padj < 0.05 & log2FoldChange > 1) %>% 
      arrange(padj) %>% head(20)
  ed31.down <- ed31.deseq %>%
      subset(padj < 0.05 & log2FoldChange < -1) %>% 
      arrange(padj) %>% head(10)
  gene <- c(ed31.up$gene,ed31.down$gene) %>% rev

  Heatmap(as.data.frame(ed31.scale)[gene,],
          rect_gp = grid::gpar(col = "black", lwd = 0.5),
          col = ArchR::paletteContinuous("coolwarm"),
          cluster_rows = FALSE, cluster_columns = TRUE,
          column_names_rot = 45, column_names_centered = FALSE,
          name = "Z-score") }

#GO and KEGG#

pbs.up <- pbs.deseq %>%
  subset(padj < 0.05 & log2FoldChange > 1) %>% 
  arrange(padj)
pbs.down <- pbs.deseq %>%
  subset(padj < 0.05 & log2FoldChange < -1) %>% 
  arrange(padj)
pbs.ko.gobp <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                      keys = pbs.up$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "BP", readable = TRUE)
pbs.ko.gocc <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                      keys = pbs.up$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "CC", readable = TRUE)
pbs.ko.gomf <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                      keys = pbs.up$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "MF", readable = TRUE)
pbs.ko.kegg <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                      keys = pbs.up$gene) %>% 
  enrichKEGG(organism = "mmu", keyType = "kegg")
pbs.ko.kegg@result$Description <- gsub(" - Mus musculus \\(house mouse\\)",
                                       "", pbs.ko.kegg@result$Description)

pbs.wt.gobp <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                      keys = pbs.down$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "BP", readable = TRUE)
pbs.wt.gocc <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                      keys = pbs.down$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "CC", readable = TRUE)
pbs.wt.gomf <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                      keys = pbs.down$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "MF", readable = TRUE)
pbs.wt.kegg <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                      keys = pbs.down$gene) %>% 
  enrichKEGG(organism = "mmu", keyType = "kegg")
pbs.wt.kegg@result$Description <- gsub(" - Mus musculus \\(house mouse\\)",
                                       "", pbs.wt.kegg@result$Description)

#PBS KO#
cowplot::plot_grid(ncol = 4,
dotplot(pbs.ko.gobp, x = "Count", color = "p.adjust", size = "GeneRatio",  
                           showCategory = 20) +
  scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
  labs(title = "GOBP in PBS KO", legned = "right") + theme_test() ,
dotplot(pbs.ko.gocc, x = "Count", color = "p.adjust", size = "GeneRatio",  
                           showCategory = 20) +
  scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
  labs(title = "GOCC in PBS KO", legned = "right") + theme_test() ,
dotplot(pbs.ko.gomf, x = "Count", color = "p.adjust", size = "GeneRatio",  
                           showCategory = 20) +
  scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
  labs(title = "GOMF in PBS KO", legned = "right") + theme_test() , NULL
)

#PBS WT#
cowplot::plot_grid(ncol = 1,
dotplot(pbs.wt.gobp, x = "Count", color = "p.adjust", size = "GeneRatio",  
          showCategory = 5) +
  scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
  labs(title = "GOBP in PBS WT", legned = "right") + theme_test() )

cowplot::plot_grid(ncol = 1,
dotplot(pbs.wt.gocc, x = "Count", color = "p.adjust", size = "GeneRatio",  
          showCategory = 5) +
  scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
  labs(title = "GOCC in PBS WT", legned = "right") + theme_test() )

cowplot::plot_grid(ncol = 1,
dotplot(pbs.wt.gomf, x = "Count", color = "p.adjust", size = "GeneRatio",  
          showCategory = 5) +
  scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
  labs(title = "GOMF in PBS WT", legned = "right") + theme_test() )

selected_pathways <- c("Cytokine-cytokine receptor interaction", "PD-L1 expression and PD-1 checkpoint pathway in cancer", "Th1 and Th2 cell differentiation", "Chemokine signaling pathway", "NF-kappa B signaling pathway") 
filtered_data <- pbs.wt.kegg %>%
  filter(Description %in% selected_pathways)  
cowplot::plot_grid(ncol = 1,
dotplot(pbs.wt.kegg, x = "Count", color = "p.adjust", size = "GeneRatio",  
          showCategory = selected_pathways) +
  scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
  labs(title = "KEGG in PBS WT", legned = "right") + theme_test())

#ED31#
ed31.up <- ed31.deseq %>%
  subset(padj < 0.05 & log2FoldChange > 1) %>% 
  arrange(padj)
ed31.down <- ed31.deseq %>%
  subset(padj < 0.05 & log2FoldChange < -1) %>% 
  arrange(padj)
ed31.ko.gobp <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                       keys = ed31.up$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "BP", readable = TRUE)
ed31.ko.gocc <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                       keys = ed31.up$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "CC", readable = TRUE)
ed31.ko.gomf <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                       keys = ed31.up$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "MF", readable = TRUE)
ed31.ko.kegg <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                       keys = ed31.up$gene) %>% 
  enrichKEGG(organism = "mmu", keyType = "kegg")
ed31.ko.kegg@result$Description <- gsub(" - Mus musculus \\(house mouse\\)",
                                        "", ed31.ko.kegg@result$Description)

ed31.wt.gobp <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                       keys = ed31.down$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "BP", readable = TRUE)
ed31.wt.gocc <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                       keys = ed31.down$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "CC", readable = TRUE)
ed31.wt.gomf <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                       keys = ed31.down$gene) %>%
  enrichGO(OrgDb = org.Mm.eg.db, ont = "MF", readable = TRUE)
ed31.wt.kegg <- mapIds(org.Mm.eg.db, keytype = "SYMBOL", column = "ENTREZID",
                       keys = ed31.down$gene) %>% 
  enrichKEGG(organism = "mmu", keyType = "kegg")
ed31.wt.kegg@result$Description <- gsub(" - Mus musculus \\(house mouse\\)",
                                        "", ed31.wt.kegg@result$Description)

selected_pathways <- c("positive regulation of response to external stimulus", "regulation of inflammatory response", "myeloid leukocyte migration", "response to molecule of bacterial origin", "cell chemotaxis")  
filtered_data <- ed31.wt.gobp %>%
  filter(Description %in% selected_pathways)
cowplot::plot_grid(ncol = 1,
dotplot(ed31.wt.gobp, x = "Count", color = "p.adjust", size = "GeneRatio",  
                           showCategory = selected_pathways) +
   scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
   labs(title = "GOBP in ED31 WT", legned = "right") + theme_test())

cowplot::plot_grid(ncol = 1,
dotplot(ed31.wt.gocc, x = "Count", color = "p.adjust", size = "GeneRatio",  
                           showCategory = 20) +
   scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
   labs(title = "GOCC in ED31 WT", legned = "right") + theme_test())

selected_pathways <- c("cell adhesion molecule binding", "G protein-coupled receptor binding", "nucleoside-triphosphatase regulator activity", "Toll-like receptor binding", "phosphatidic acid binding") 
filtered_data <- ed31.wt.gomf %>%
  filter(Description %in% selected_pathways)
cowplot::plot_grid(ncol = 1,
dotplot(ed31.wt.gomf, x = "Count", color = "p.adjust", size = "GeneRatio",  
                           showCategory = selected_pathways) +
   scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
   labs(title = "GOMF in ED31 WT", legned = "right") + theme_test())

cowplot::plot_grid(ncol = 1,
dotplot(ed31.wt.kegg, x = "Count", color = "p.adjust", size = "GeneRatio",  
                           showCategory = 4) +
   scale_fill_gradientn(colors = viridis::magma(n = 1e2)) +
   labs(title = "KEGG in ED31 WT", legned = "right") + theme_test())
